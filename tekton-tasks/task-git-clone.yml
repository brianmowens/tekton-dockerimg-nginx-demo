apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-git-clone
spec:
  params:
    - name: git-credential-secret-name
      type: string
      description: Name of the Kubernetes secret for use with Git authentication.
    - name: git-url
      type: string
      description: Git url of the repository where the Dockerfile is stored.
    - name: git-branch
      type: string
      default: main
      description: Git branch to checkout.
    - name: git-revision
      type: string
      default: ""
  workspaces:
    - name: kaniko
      description: |
        Kaniko working folder
  steps:
    - image: alpine/git
      name: git-clone
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.git-credential-secret-name)
              key: password
      script: |
        GIT_BRANCH=$(params.git-branch)
        GIT_REVISION=$(params.git-revision)
        GIT_URL=$(params.git-url)

        # Clone the repository
        echo "Cloning repository: $GIT_URL"
        git clone $GIT_URL $(workspaces.kaniko.path)
        
        echo "Setting working directory: $(workspaces.kaniko.path)"
        cd $(workspaces.kaniko.path)

        # If git revision is not empty, checkout the revision.
        # Else if git revision is empty but branch is not, checkout branch.
        # Else return non-zero exit code.
        if [[ $GIT_REVISION != "" ]]; then
          echo "Checking out git revision: $GIT_REVISION"
          git checkout $GIT_REVISION
        elif [[ $GIT_REVISION == "" && $GIT_BRANCH != "" ]]; then
          echo "Checking out git branch: $GIT_BRANCH"
          git checkout $GIT_BRANCH
        else
          echo "Unable to determine revision or branch to checkout."
          return -1
        fi

        # Print directory output for logs
        ls -lah $(workspaces.kaniko.path)
      workingDir: $(workspaces.kaniko.path)